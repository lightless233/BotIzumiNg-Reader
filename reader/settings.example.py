"""
Django settings for bot_izumi_ng_reader project.

Generated by 'django-admin startproject' using Django 3.0.8.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = ''
if SECRET_KEY == "":
    raise RuntimeError("No SECRET_KEY in settings.py")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = [
    "localhost",
    "127.0.0.1"
]

# Application definition

INSTALLED_APPS = [
    # 'django.contrib.admin',
    # 'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    "reader.base"
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    "reader.base.middleware.cors_middleware.CORSMiddleware",
    "reader.base.middleware.login_middleware.LoginMiddleware",
]

ROOT_URLCONF = 'reader.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'reader.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'Asia/Shanghai'
USE_I18N = True
USE_L10N = True
USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'

# logger settings
LOG_TO_FILE = True
LOG_PATH = "./logs/"
LOG_FILENAME = "reader.log"

ALLOWED_ORIGINS = [
    "localhost",
    "127.0.0.1",
]

# PASSWORD SALT
PASSWORD_SALT = ""
if PASSWORD_SALT is None or PASSWORD_SALT == "":
    raise SystemError("PASSWORD_SALT 不能为空, 请在 reader/settings.py 中配置.")

# JWT SECRET
# 格式如下：
# JWT_PRIVATE = """-----BEGIN RSA PRIVATE KEY-----
# ...
# -----END RSA PRIVATE KEY-----
# """
# JWT_PUBLIC = """-----BEGIN PUBLIC KEY-----
# ...
# -----END PUBLIC KEY-----"""
# 生成方式如下：
# > ssh-keygen -t rsa -b 2048 -f private.key
# > openssl rsa -in private.key -pubout -outform PEM -out public.key
JWT_PRIVATE = ""
JWT_PUBLIC = ""
if JWT_PRIVATE == "" or JWT_PUBLIC == "":
    raise SystemError("JWT_PRIVATE 与 JWT_PUBLIC 不能为空. 请在 reader/settings.py 中配置.")
JWT_SECRET = ""
if PASSWORD_SALT is None or PASSWORD_SALT == "":
    raise SystemError("JWT_SECRET 不能为空, 请在 reader/settings.py 中配置.")
